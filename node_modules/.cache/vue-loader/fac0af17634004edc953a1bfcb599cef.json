{"remainingRequest":"E:\\code\\javacode\\elementUI\\euiadmin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\code\\javacode\\elementUI\\euiadmin\\src\\components\\module\\excel\\ImportExcel.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\code\\javacode\\elementUI\\euiadmin\\src\\components\\module\\excel\\ImportExcel.vue","mtime":1610691726691},{"path":"E:\\code\\javacode\\elementUI\\euiadmin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\code\\javacode\\elementUI\\euiadmin\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\code\\javacode\\elementUI\\euiadmin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\code\\javacode\\elementUI\\euiadmin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgWExTWCBmcm9tICJ4bHN4IjsNCmV4cG9ydCBkZWZhdWx0IHsNCiAgZGF0YSgpIHsNCiAgICByZXR1cm4gew0KICAgICAgZmlsZTogIiIsDQogICAgICBleGNlbF9pbXBvcnRfZGF0YTonJw0KICAgIH07DQogIH0sDQogIG1ldGhvZHM6IHsNCiAgICBjaG9vc2VfZmlsZShmaWxlKSB7DQogICAgICB0aGlzLmZpbGUgPSBmaWxlLnJhdzsNCiAgICAvLyAgIGNvbnNvbGUubG9nKHRoaXMuZmlsZSk7DQogICAgICB0aGlzLmltcG9ydEV4Y2VsKHRoaXMuZmlsZSkNCiAgICB9LA0KICAgIGltcG9ydEV4Y2VsKGZpbGUpIHsNCiAgICAgIHZhciBleGNlbERhdGEgPSBbXTsNCiAgICAgIC8v5aOw5piO5LiA5Liq5paH5Lu26K+75Y+W5ZmoDQogICAgICBjb25zdCBmaWxlUmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoKTsNCiAgICAgIC8v5paH5Lu26K+75Y+W5oiQ5Yqf5pe26Kem5Y+R5LqL5Lu2DQogICAgICBmaWxlUmVhZGVyLm9ubG9hZCA9IChldikgPT4gew0KICAgICAgICB0cnkgew0KICAgICAgICAgIC8v6K+75Y+W55qE5paH5Lu2Ow0KDQogICAgICAgICAgY29uc3QgZGF0YSA9IGV2LnRhcmdldC5yZXN1bHQ7DQogICAgICAgICAgLy/ku6Xkuozov5vliLbmtYHmlrnlvI/or7vlj5blvpfliLDmlbTku71leGNlbOihqOagvA0KICAgICAgICAgIGNvbnN0IHdvcmtib29rID0gWExTWC5yZWFkKGRhdGEsIHsgdHlwZTogImJpbmFyeSIgfSk7DQogICAgICAgICAgLy8g5b6q546v6YGN5Y6GZXhjZWznmoRzaGVldOWvueixoQ0KICAgICAgICAgIE9iamVjdC5rZXlzKHdvcmtib29rLlNoZWV0cykuZm9yRWFjaCgoc2hlZXQpID0+IHsNCiAgICAgICAgICAgIGNvbnNvbGUuaW5mbyh3b3JrYm9vay5TaGVldHNbc2hlZXRdWyIhcmVmIl0pOw0KICAgICAgICAgICAgZXhjZWxEYXRhLnB1c2goDQogICAgICAgICAgICAgIC8v5bCGZXhjZWwg6L2s5o2i5oiQanNvbuWvueixoeaUvuWFpeaVsOe7hOS4rQ0KICAgICAgICAgICAgICAuLi5YTFNYLnV0aWxzLnNoZWV0X3RvX2pzb24od29ya2Jvb2suU2hlZXRzW3NoZWV0XSkNCiAgICAgICAgICAgICk7DQogICAgICAgICAgfSk7DQogICAgICAgICAgLy8g6Ieq5a6a5LmJ5LqL5Lu277yM5q+U5aaC5qCh6aqMZXhjZWzmlbDmja7jgILovazmjaLmlbDmja7moLzlvI/igKYNCiAgICAgICAgICAvLyBjb25zb2xlLmxvZyhleGNlbERhdGEpLy/mnKrovazmjaJrZXnlgLznmoTmlbDmja4NCiAgICAgICAgICB0aGlzLmNoYW5nZUtleShleGNlbERhdGEpLy/osIPnlKjovazmjaJrZXnlgLwNCiAgICAgICAgfSBjYXRjaCAoZSkgew0KICAgICAgICAgIHRoaXMuJG1lc3NhZ2UuZGFuZ2VyKCfmlofku7bnsbvlnovkuI3mraPnoa4nKTsNCiAgICAgICAgfQ0KICAgICAgfTsNCiAgICAgIC8v6K+75Y+W5paH5Lu2DQogICAgICBmaWxlUmVhZGVyLnJlYWRBc0JpbmFyeVN0cmluZyhmaWxlKTsNCiAgICB9LA0KICAgIGNoYW5nZUtleShleGNlbERhdGEpew0KICAgICAgICB2YXIgbmV3S2V5TWFwPXsvL2tleei9rOaNouWtl+WFuO+8jOW3puS+p+S4uuaXp+eahGtleeWAvOOAguWPs+S+p+S4uuaWsGtleeWAvA0KICAgICAgICAgICAgJ+aYteensCc6J3VzZXJfcGV0X25hbWUnLA0KICAgICAgICAgICAgJ+eUqOaIt+WQjSc6J3VzZXJfbmFtZScsDQogICAgICAgICAgICAn55So5oi36YKu566xJzondXNlcl9lbWFpbCcsDQogICAgICAgICAgICAn55So5oi355S16K+dJzondXNlcl9waG9uZScsDQogICAgICAgICAgICAn5oCn5YirJzondXNlcl9zZXgnLA0KICAgICAgICAgICAgJ+eUqOaIt+W5tOm+hCc6J3VzZXJfYWdlJywNCiAgICAgICAgICAgICfnlKjmiLfnsbvliKsnOid1c2VyX2xhYmVsJywNCiAgICAgICAgfQ0KICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGV4Y2VsRGF0YS5sZW5ndGg7IGkrKykgew0KICAgICAgICAgICAgdmFyIG9iaiA9IGV4Y2VsRGF0YVtpXTsNCiAgICAgICAgICAgIGZvciAobGV0IGtleSBpbiBvYmopIHsNCiAgICAgICAgICAgICAgICB2YXIgbmV3S2V5PW5ld0tleU1hcFtrZXldDQogICAgICAgICAgICAgICAgaWYobmV3S2V5KXsNCiAgICAgICAgICAgICAgICAgICAgb2JqW25ld0tleV09b2JqW2tleV0NCiAgICAgICAgICAgICAgICAgICAgZGVsZXRlIG9ialtrZXldDQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgDQogICAgICAgIH0NCiAgICAgICAgdGhpcy5leGNlbF9pbXBvcnRfZGF0YT1leGNlbERhdGENCiAgICAgICAgLy8gY29uc29sZS5sb2codGhpcy5leGNlbF9pbXBvcnRfZGF0YSkNCiAgICAgICAgdGhpcy4kZW1pdCgnZXhjZWxfZGF0YScsdGhpcy5leGNlbF9pbXBvcnRfZGF0YSkNCiAgICAgICAgdGhpcy4kbWVzc2FnZS5zdWNjZXNzKCLlr7zlhaXmiJDlip/vvIzlt7LkuLrmgqjmmL7npLrliLDmlbDmja7ooajmoLzvvIzmgqjkuZ/lj6/ku6Xmn6XnnItjb25zb2xlIik7DQogICAgfQ0KICB9LA0KfTsNCg=="},{"version":3,"sources":["ImportExcel.vue"],"names":[],"mappings":";;;;;;;;;;;;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ImportExcel.vue","sourceRoot":"src/components/module/excel","sourcesContent":["<template>\r\n    <el-upload\r\n      class=\"upload-demo\"\r\n      action\r\n      :auto-upload=\"false\"\r\n      :show-file-list=\"false\"\r\n      :on-change=\"choose_file\"\r\n    >\r\n      <el-button size=\"small\" type=\"primary\">请选择导入excel</el-button>\r\n    </el-upload>\r\n</template>\r\n<script>\r\nimport XLSX from \"xlsx\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      file: \"\",\r\n      excel_import_data:''\r\n    };\r\n  },\r\n  methods: {\r\n    choose_file(file) {\r\n      this.file = file.raw;\r\n    //   console.log(this.file);\r\n      this.importExcel(this.file)\r\n    },\r\n    importExcel(file) {\r\n      var excelData = [];\r\n      //声明一个文件读取器\r\n      const fileReader = new FileReader();\r\n      //文件读取成功时触发事件\r\n      fileReader.onload = (ev) => {\r\n        try {\r\n          //读取的文件;\r\n\r\n          const data = ev.target.result;\r\n          //以二进制流方式读取得到整份excel表格\r\n          const workbook = XLSX.read(data, { type: \"binary\" });\r\n          // 循环遍历excel的sheet对象\r\n          Object.keys(workbook.Sheets).forEach((sheet) => {\r\n            console.info(workbook.Sheets[sheet][\"!ref\"]);\r\n            excelData.push(\r\n              //将excel 转换成json对象放入数组中\r\n              ...XLSX.utils.sheet_to_json(workbook.Sheets[sheet])\r\n            );\r\n          });\r\n          // 自定义事件，比如校验excel数据。转换数据格式…\r\n          // console.log(excelData)//未转换key值的数据\r\n          this.changeKey(excelData)//调用转换key值\r\n        } catch (e) {\r\n          this.$message.danger('文件类型不正确');\r\n        }\r\n      };\r\n      //读取文件\r\n      fileReader.readAsBinaryString(file);\r\n    },\r\n    changeKey(excelData){\r\n        var newKeyMap={//key转换字典，左侧为旧的key值。右侧为新key值\r\n            '昵称':'user_pet_name',\r\n            '用户名':'user_name',\r\n            '用户邮箱':'user_email',\r\n            '用户电话':'user_phone',\r\n            '性别':'user_sex',\r\n            '用户年龄':'user_age',\r\n            '用户类别':'user_label',\r\n        }\r\n        for (let i = 0; i < excelData.length; i++) {\r\n            var obj = excelData[i];\r\n            for (let key in obj) {\r\n                var newKey=newKeyMap[key]\r\n                if(newKey){\r\n                    obj[newKey]=obj[key]\r\n                    delete obj[key]\r\n                }\r\n            }\r\n            \r\n        }\r\n        this.excel_import_data=excelData\r\n        // console.log(this.excel_import_data)\r\n        this.$emit('excel_data',this.excel_import_data)\r\n        this.$message.success(\"导入成功，已为您显示到数据表格，您也可以查看console\");\r\n    }\r\n  },\r\n};\r\n</script>"]}]}