{"remainingRequest":"E:\\code\\javacode\\elementUI\\euiadmin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\code\\javacode\\elementUI\\euiadmin\\src\\components\\echarts\\EchartsLineSpace.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\code\\javacode\\elementUI\\euiadmin\\src\\components\\echarts\\EchartsLineSpace.vue","mtime":1610691726686},{"path":"E:\\code\\javacode\\elementUI\\euiadmin\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\code\\javacode\\elementUI\\euiadmin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\code\\javacode\\elementUI\\euiadmin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}